#! /usr/bin/env bash

panic()
{
	echo "ERROR: $@"
	exit 1
}

cmd_dir=$(dirname "$0") || panic
abs_cmd_dir=$(readlink -f "$cmd_dir") || panic

while getopts I:D:B: opt; do
	case $opt in
	I)
		install_dir="$OPTARG";;
	D)
		data_dir="$OPTARG";;
	B)
		build_dir="$OPTARG";;
  *)
    echo "Unknown option: $opt"
    exit 1
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	install_dir="$abs_cmd_dir/../tmp/install"
	data_dir="$abs_cmd_dir/../data"
	build_dir="$abs_cmd_dir/../tmp/cmake"
else
	data_dir="$install_dir/../data"
	build_dir=
fi

top_dir="$abs_cmd_dir/.."
bin_dir="$install_dir/bin"
data_dir="$data_dir"

host=$(hostname) || panic
user=$(whoami) || panic
tmp_dir="/tmp/wtlib-$user@$host-$$"

mkdir -p "$tmp_dir" || panic

cat <<- EOF
top dir $top_dir
bin dir $bin_dir
data dir $data_dir
EOF

if [ ! -d "$install_dir" ]; then
	if [ -z "$build_dir" ]; then
		panic
	fi
	cmake -H"$top_dir" -B"$build_dir" \
	  -DCMAKE_INSTALL_PREFIX="$install_dir" || panic
	cmake --build "$build_dir" --target install || panic
fi

synthesize="$bin_dir/wtl_wavelet_synthesize"
add_noise="$bin_dir/wtl_add_noise_to_mesh"
denoise="$bin_dir/wtl_wavelet_filter"

original_file="$data_dir/subdivision_meshes/ico_12_42.off"
subdivided_file="$tmp_dir/subdivided.off"
noisy_file="$tmp_dir/noisy.off"
denoised_file="$tmp_dir/denoised.off"

"$synthesize" \
  -i "$original_file" \
  -o "$subdivided_file" \
  -m Loop -l 4 -A < /dev/null \
  || panic
"$add_noise" \
  -m 0 -d .03125 \
  -i "$subdivided_file" \
  -o "$noisy_file" \
  || panic
"$denoise" \
  -m Loop -l 3 -L \
  -i "$noisy_file" \
  -o "$denoised_file" \
  || panic


meshlab "$noisy_file"
meshlab "$denoised_file"

rm -rf "$tmp_dir"
