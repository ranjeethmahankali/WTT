#! /usr/bin/env bash

panic()
{
	echo "ERROR: $@"
	exit 1
}


cmd_dir=$(dirname "$0") || panic
abs_cmd_dir=$(readlink -f "$cmd_dir") || panic

while getopts I:D:B: opt; do
	case $opt in
	I)
		install_dir="$OPTARG";;
	D)
		data_dir="$OPTARG";;
	B)
		bin_dir="$OPTARG";;
  *)
    echo "Unknown option: $opt"
    exit 1
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	install_dir=$(readlink -f "$abs_cmd_dir/..")
fi

if [ -z "$data_dir" ]; then
	data_dir=$install_dir/share/wtlib/sample-meshes
fi

if [ -z "$bin_dir" ]; then
	bin_dir=$install_dir/bin
fi


if [ ! -x "$bin_dir/wtt_filter" ] || [ ! -x "$bin_dir/wtt_add_noise" ]; then
	echo "Required executables not found, start build..."
	source_dir=$abs_cmd_dir/..
	build_dir=$source_dir/tmp/cmake
	install_dir=$source_dir/tmp/install
	bin_dir=$install_dir/bin
	data_dir=$install_dir/share/wtlib/sample-meshes
	cmake -H"$source_dir" -B"$build_dir" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$install_dir" || panic
	cmake --build "$build_dir" --target install || panic
fi

echo "install_dir $install_dir"
echo "bin_dir $bin_dir"
echo "data_dir $data_dir"

"$bin_dir"/wtt_noise_removal_demo Loop "$data_dir"/bunny.off 1
"$bin_dir"/wtt_noise_removal_demo Butterfly "$data_dir"/bunny.off 1
"$bin_dir"/wtt_noise_removal_demo Loop "$data_dir"/dragon.off 0
"$bin_dir"/wtt_noise_removal_demo Butterfly "$data_dir"/dragon.off 1